'.source.gfm':
  '@author':
    'prefix': 'lia.macro.author'
    'body': '@author'
    'description': """
      Gets replaced by the author defined in the header.
    """
    'descriptionMoreURL': 'https://liascript.github.io/course/?https://raw.githubusercontent.com/liaScript/docs/master/README.md'
    'leftLabelHTML': '<span style="color:#ff0">ðŸ› </span>'


  '@input':
    'prefix': 'lia.macro.input'
    'body': '@input'
    'description': """
      Use this only in conjuction with executable code and projects or with quizzes. This macro can only be used in a script tag and gets replaced by the current user input.
      To refer to the inputs in a project, use the parametrized macro:

        @input(0)   <== equal to @input
        @input(1)
    """
    'descriptionMoreURL': 'https://liascript.github.io/course/?https://raw.githubusercontent.com/liaScript/docs/master/README.md'
    'leftLabelHTML': '<span style="color:#ff0">ðŸ› </span>'


  '@date':
    'prefix': 'lia.macro.date'
    'body': '@date'
    'description': """
      Gets replaced by the date defined in the header.
    """
    'descriptionMoreURL': 'https://liascript.github.io/course/?https://raw.githubusercontent.com/liaScript/docs/master/README.md'
    'leftLabelHTML': '<span style="color:#ff0">ðŸ› </span>'


  '@email':
    'prefix': 'lia.macro.email'
    'body': '@email'
    'description': """
      Gets replaced by the email defined in the header.
    """
    'descriptionMoreURL': 'https://liascript.github.io/course/?https://raw.githubusercontent.com/liaScript/docs/master/README.md'
    'leftLabelHTML': '<span style="color:#ff0">ðŸ› </span>'


  '@section':
    'prefix': 'lia.macro.section'
    'body': '@section'
    'description': """
      Gets replaced by the current section number.
    """
    'descriptionMoreURL': 'https://liascript.github.io/course/?https://raw.githubusercontent.com/liaScript/docs/master/README.md'
    'leftLabelHTML': '<span style="color:#ff0">ðŸ› </span>'


  '@uid':
    'prefix': 'lia.macro.uid'
    'body': '@uid'
    'description': """
      Generates a uid that can be used to name tags uniqely.
    """
    'descriptionMoreURL': 'https://liascript.github.io/course/?https://raw.githubusercontent.com/liaScript/docs/master/README.md'
    'leftLabelHTML': '<span style="color:#ff0">ðŸ› </span>'


  '@version':
    'prefix': 'lia.macro.version'
    'body': '@version'
    'description': """
      Gets replaced by the version defined in the header.
    """
    'descriptionMoreURL': 'https://liascript.github.io/course/?https://raw.githubusercontent.com/liaScript/docs/master/README.md'
    'leftLabelHTML': '<span style="color:#ff0">ðŸ› </span>'


  '@name: line':
    'prefix': 'lia.macro.definition.line'
    'body': '@${1:name}: ${2:line}'
    'description': """
      Use macros to deal with repetitive task and to make the document more readable. You can define your own macros within the main and section headers. Start your macro with an (@) sign and give it a name. Separate the name from the body with a colon (:). If you want to parametrize your macro, use @0, @1, ... for the parameter id. It is a simple string substitution mechanism, and the parameters are seperate by a comma (,). If you have commas in your parameters, then use back-tics (`) to enclose this parameter. And tripple back-tics (```) to enclose multiline parameters.

      Example:

        ## section
        <!--
        @red: <!-- style="color: red;" -->

        @bold_italic: __@0__ _@1_
        -->

        @red
        This whole paragraph will be read and this will be:
        @bold_italic(I am Bold,`I am Italic,, I am too`).
    """
    'descriptionMoreURL': 'https://liascript.github.io/course/?https://raw.githubusercontent.com/liaScript/docs/master/README.md'
    'leftLabelHTML': '<span style="color:#ff0">ðŸ› </span>'


  '@name ... body ... @end':
    'prefix': 'lia.macro.definition.block'
    'body': """
      @${1:name}
      ${2:param1 -> __@0__}
      @end
    """
    'description': """
      Use macros to deal with repetitive task and to make the document more readable. Multiline macros start with an (@your_name) and end with (@end). Parameters can also be passed as to single line macros.

      Example:

        ## section
        <!--
        evalJS
        <script>
          try{
            eval(`@input`);
          } catch (e) {
            var log = e.stack.match(/((.*?):(.*))\n.*?(:(\d+):(\d+)\)\n)/);
            var err_msg = new LiaError(log[1] + " =>  (" + log[4], 1);
            err_msg.add_detail(0, log[3], "error", log[5]-1, log[6]);
            throw err_msg;
          }
        </script>
        @end
        -->

        eval this code with erros:

        ```js
        let x = 12;
        x * c;
        ```
        @evalJS
    """
    'descriptionMoreURL': 'https://liascript.github.io/course/?https://raw.githubusercontent.com/liaScript/docs/master/README.md'
    'leftLabelHTML': '<span style="color:#ff0">ðŸ› </span>'


  '``` @macro ```':
    'prefix': 'lia.macro.call.block'
    'body': """
      ```${1:lang}
      @${2:macro}
      ${3:a multiline
      parameter}
      ```
    """
    'description': """
      If you have a more complex multiline macro definition, you can also use the following style so that it gets rendered at least in a readable manner by github for example. Thus, you can place your macro call into a code block, the first language parameter gets ignored and on the first line, the macro call has to be defined, whereby the following elements within the block are passed as the last multiline parameter to that call.

      Example:

          ## Macro
          <!--
          link:   https://pannellum.org/css/style.css
                  https://cdn.pannellum.org/2.4/pannellum.css

          script: https://cdn.pannellum.org/2.4/pannellum.js

          @panorama
          <div id="panorama_@0" style="width: 100%; height: 400px;"></div>
          <script>
          pannellum.viewer('panorama_@0', {
              "type": "equirectangular",
              "panorama": "@1",
              "autoLoad": false,
              "hotSpots": [@2]
          });
          </script>
          @end
          -->

          ```json
          @panorama("0",https://pannellum.org/images/cerro-toco-0.jpg)

          {
              "pitch": 14.1,
              "yaw": 1.5,
              "type": "info",
              "text": "Baltimore Museum of Art",
              "URL": "https://artbma.org/"
          },
          {
              "pitch": -0.9,
              "yaw": 144.4,
              "type": "info",
              "text": "North Charles Street"
          }
          ```
    """
    'descriptionMoreURL': 'https://liascript.github.io/course/?https://raw.githubusercontent.com/liaScript/mermaid_template/master/README.md'
    'leftLabelHTML': '<span style="color:#ff0">ðŸ› </span>'
